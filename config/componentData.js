module.exports = [{"name":"HelloWorld","description":"","props":{"message":{"type":{"name":"string"},"required":false,"description":"Message to display","defaultValue":{"value":"'World'","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types'; // ES6\n\nfunction HelloWorld({message}) {\n    return <div> Hello {message}!</div>\n}\n\nHelloWorld.propTypes = {\n    /** Message to display */\n    message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: 'World'\n};\n\nexport default HelloWorld;","examples":[{"name":"ExampleHelloWorld","description":"Custom message describing component","code":"import React from 'react';\nimport HelloWorld from 'prosdevlab-react/HelloWorld';\n\n/** Custom message describing component */\nexport default function ExampleHellowWorld() {\n    return <HelloWorld message=\"World\"/>\n}"}]},{"name":"IconGithub","description":"SVG Github Icon","props":{"size":{"type":{"name":"string"},"required":false,"description":"Can specify \"sm\", \"md\", \"lg\", \"xl\". If not specificied, will default to \"sm\" (base 16px).","defaultValue":{"value":"\"sm\"","computed":false}}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** SVG Github Icon */\nfunction IconGithub({size}) {\n    let width, height;\n\n    if (size === \"sm\") {\n        width = \"16\";\n        height = \"16\";\n    } else if (size === \"md\") {\n        width = \"32\";\n        height = \"32\";\n    } else if (size === \"lg\") {\n        width = \"48\";\n        height = \"48\";\n    } else if (size === \"xl\") {\n        width = \"64\";\n        height = \"64\";\n    }\n\n    return (\n        <svg width={width} height={height} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 .198a8 8 0 0 0-2.529 15.591c.4.074.547-.174.547-.385 0-.191-.008-.821-.011-1.489-2.226.484-2.695-.944-2.695-.944-.364-.925-.888-1.171-.888-1.171-.726-.497.055-.486.055-.486.803.056 1.226.824 1.226.824.714 1.223 1.872.869 2.328.665.072-.517.279-.87.508-1.07-1.777-.202-3.645-.888-3.645-3.954 0-.873.313-1.587.824-2.147-.083-.202-.357-1.015.077-2.117 0 0 .672-.215 2.201.82A7.672 7.672 0 0 1 8 4.066c.68.003 1.365.092 2.004.269 1.527-1.035 2.198-.82 2.198-.82.435 1.102.162 1.916.079 2.117.513.56.823 1.274.823 2.147 0 3.073-1.872 3.749-3.653 3.947.287.248.543.735.543 1.481 0 1.07-.009 1.932-.009 2.195 0 .213.144.462.55.384A8 8 0 0 0 8.001.196z\"/>\n        </svg>\n    );\n}\n\nIconGithub.propTypes = {\n  /** Can specify \"sm\", \"md\", \"lg\", \"xl\". If not specificied, will default to \"sm\" (base 16px). */\n  size: PropTypes.string\n};\n\nIconGithub.defaultProps = {\n    size: \"sm\"\n};\n\nexport default IconGithub;","examples":[{"name":"ExampleIconGithubExtraLarge","description":"","code":"import React from 'react';\nimport IconGithub from 'prosdevlab-react/IconGithub';\n\nexport default function ExampleIconGithubExtraLarge() {\n    return <IconGithub size=\"xl\"/>\n}"},{"name":"ExampleIconGithubLarge","description":"","code":"import React from 'react';\nimport IconGithub from 'prosdevlab-react/IconGithub';\n\nexport default function ExampleIconGithubLarge() {\n    return <IconGithub size=\"lg\"/>\n}"},{"name":"ExampleIconGithubMedium","description":"","code":"import React from 'react';\nimport IconGithub from 'prosdevlab-react/IconGithub';\n\nexport default function ExampleIconGithubMedium() {\n    return <IconGithub size=\"md\"/>\n}\n"},{"name":"ExampleIconGithubSmall","description":"","code":"import React from 'react';\nimport IconGithub from 'prosdevlab-react/IconGithub';\n\nexport default function ExampleIconGithubSmall() {\n    return <IconGithub size=\"sm\"/>\n}\n"}]},{"name":"Label","description":"Label with required field display, htmlFor, and block styling","props":{"htmlFor":{"type":{"name":"string"},"required":true,"description":"HTML ID for associated input"},"label":{"type":{"name":"string"},"required":true,"description":"Label"},"required":{"type":{"name":"bool"},"required":false,"description":"If required, display an asterisk after label"}},"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({htmlFor, label, required}) {\n    return (\n        <label style={{display: 'block'}} htmlFor={htmlFor}>\n            {label} { required && <span style={{color: 'red'}}> *</span> }\n        </label>\n    );\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n    htmlFor: PropTypes.string.isRequired,\n\n    /** Label */\n    label: PropTypes.string.isRequired,\n\n    /** If required, display an asterisk after label */\n    required: PropTypes.bool\n};\n\nexport default Label;","examples":[{"name":"ExampleOptionalLabel","description":"Optional Label","code":"import React from 'react';\nimport Label from 'prosdevlab-react/Label';\n\n/** Optional Label */\nexport default function ExampleOptionalLabel() {\n    return <Label htmlFor=\"test\" label=\"test\"/>\n}"},{"name":"ExampleRequiredLabel","description":"Optional Label","code":"import React from 'react';\nimport Label from 'prosdevlab-react/Label';\n\n/** Optional Label */\nexport default function ExampleRequiredLabel() {\n    return <Label htmlFor=\"test\" label=\"test\" required />\n}"}]},{"name":"ProgressBar","description":"","props":{"percent":{"type":{"name":"number"},"required":true,"description":"Percent of progress completed"},"width":{"type":{"name":"number"},"required":true,"description":"Width of progress bar"},"height":{"type":{"name":"number"},"required":false,"description":"Height of progress bar","defaultValue":{"value":"5","computed":false}}},"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends Component {\n\n    getColor = () => {\n        if (this.props.percent === 100) return 'green';\n        return this.props.percent > 50 ? 'lightgreen' : 'red';\n    };\n\n    getWidthAsPercentOfTotalWidth = () => {\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\n    };\n\n    render() {\n        const { percent, width, height } = this.props;\n        return (\n            <div style={{border: 'solid 1px lightgray', width: width}}>\n                <div style={{\n                    width: this.getWidthAsPercentOfTotalWidth(),\n                    height,\n                    backgroundColor: this.getColor(percent)\n                }} />\n            </div>\n        )\n    }\n}\nProgressBar.propTypes = {\n    /** Percent of progress completed */\n    percent: PropTypes.number.isRequired,\n\n    /** Width of progress bar */\n    width: PropTypes.number.isRequired,\n\n    /** Height of progress bar */\n    height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n    height: 5\n};\n\nexport default ProgressBar;","examples":[{"name":"Example100Percent","description":"100% progress","code":"import React from 'react';\nimport ProgressBar from 'prosdevlab-react/ProgressBar';\n\n/** 100% progress */\nexport default function Example100Percent() {\n    return <ProgressBar percent={100} width={200}/>\n}\n"},{"name":"Example20Percent","description":"20% progress","code":"import React from 'react';\nimport ProgressBar from 'prosdevlab-react/ProgressBar';\n\n/** 20% progress */\nexport default function Example20Percent() {\n    return <ProgressBar percent={20} width={200}/>\n}\n"},{"name":"Example70Percent","description":"70% progress","code":"import React from 'react';\nimport ProgressBar from 'prosdevlab-react/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n    return <ProgressBar percent={70} width={200}/>\n}\n"}]}]